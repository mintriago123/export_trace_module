// <auto-generated />
using System;
using ExportModule.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ExportModule.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250604074426_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ExportModule.Models.ConsultaAPI", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Endpoint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.HasKey("Id");

                    b.ToTable("ConsultasAPI");
                });

            modelBuilder.Entity("ExportModule.Models.Cultivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Cultivos");
                });

            modelBuilder.Entity("ExportModule.Models.DatosAExportar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ConsultaAPIId")
                        .HasColumnType("integer");

                    b.Property<string>("Contenido")
                        .HasColumnType("text");

                    b.Property<int?>("CultivoId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FechaExportacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Formato")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<int?>("PlagaId")
                        .HasColumnType("integer");

                    b.Property<string>("TipoDato")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaAPIId");

                    b.HasIndex("CultivoId");

                    b.HasIndex("PlagaId");

                    b.ToTable("DatosAExportar");
                });

            modelBuilder.Entity("ExportModule.Models.Plaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsultaAPIId")
                        .HasColumnType("integer");

                    b.Property<int>("CultivoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConsultaAPIId");

                    b.HasIndex("CultivoId");

                    b.ToTable("Plagas");
                });

            modelBuilder.Entity("ExportModule.Models.TareaProgramada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaEjecucion")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("TareasProgramadas");
                });

            modelBuilder.Entity("ExportModule.Models.DatosAExportar", b =>
                {
                    b.HasOne("ExportModule.Models.ConsultaAPI", "ConsultaAPI")
                        .WithMany("DatosExportados")
                        .HasForeignKey("ConsultaAPIId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ExportModule.Models.Cultivo", "Cultivo")
                        .WithMany()
                        .HasForeignKey("CultivoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ExportModule.Models.Plaga", "Plaga")
                        .WithMany()
                        .HasForeignKey("PlagaId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("ConsultaAPI");

                    b.Navigation("Cultivo");

                    b.Navigation("Plaga");
                });

            modelBuilder.Entity("ExportModule.Models.Plaga", b =>
                {
                    b.HasOne("ExportModule.Models.ConsultaAPI", "ConsultaAPI")
                        .WithMany("Plagas")
                        .HasForeignKey("ConsultaAPIId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExportModule.Models.Cultivo", "Cultivo")
                        .WithMany("Plagas")
                        .HasForeignKey("CultivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ConsultaAPI");

                    b.Navigation("Cultivo");
                });

            modelBuilder.Entity("ExportModule.Models.ConsultaAPI", b =>
                {
                    b.Navigation("DatosExportados");

                    b.Navigation("Plagas");
                });

            modelBuilder.Entity("ExportModule.Models.Cultivo", b =>
                {
                    b.Navigation("Plagas");
                });
#pragma warning restore 612, 618
        }
    }
}
